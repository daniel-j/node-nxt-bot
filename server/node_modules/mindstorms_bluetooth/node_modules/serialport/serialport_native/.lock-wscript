argv = ['/usr/local/bin/node-waf', 'configure', 'build']
blddir = '/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/serialport/serialport_native/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': True, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/serialport/serialport_native'
environ = {'npm_config_git': 'git', 'npm_config_color': 'true', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_save_bundle': '', 'npm_package_contributors_3_name': 'Rick Waldron', 'npm_config_group': '1000', 'npm_config_browser': 'google-chrome', 'npm_package_repository_url': 'git://github.com/voodootikigod/node-serialport.git', 'npm_config_global': '', 'LC_PAPER': 'sv_SE.UTF-8', 'HOME': '/home/pi', 'npm_config_save_optional': '', 'LANG': 'en_GB.UTF-8', 'SHELL': '/bin/bash', 'LC_MONETARY': 'sv_SE.UTF-8', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_pre': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', 'npm_config_prefix': '/usr/local', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'npm_config_tmp': '/home/pi/tmp', 'npm_config_link': '', 'npm_package_engines_node': '0.6', 'npm_config_argv': '{"remain":["mindstorms_bluetooth"],"cooked":["install","mindstorms_bluetooth"],"original":["install","mindstorms_bluetooth"]}', 'npm_config_cache_lock_wait': '10000', 'npm_config_cache_lock_retries': '10', 'LC_IDENTIFICATION': 'sv_SE.UTF-8', 'LC_ADDRESS': 'sv_SE.UTF-8', 'npm_config_strict_ssl': 'true', 'npm_config_fetch_retry_factor': '10', 'LC_TELEPHONE': 'sv_SE.UTF-8', 'npm_config_save_dev': '', 'npm_config_optional': 'true', 'npm_config_dev': '', 'npm_config_node_version': 'v0.8.8', 'npm_package_contributors_2_name': 'Nathan Rajlich', 'npm_package_main': './serialport', 'npm_config_init_version': '0.0.0', 'npm_config_user_agent': 'node/v0.8.8', 'npm_lifecycle_event': 'install', 'npm_config_rollback': 'true', 'npm_config_tag': 'latest', 'npm_config_init_author_name': '', 'SSH_TTY': '/dev/pts/0', 'npm_config_username': '', 'npm_config_globalignorefile': '/usr/local/etc/npmignore', 'npm_config_rebuild_bundle': 'true', 'npm_config_yes': '', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_config_usage': '', 'npm_package_description': 'Welcome your robotic javascript overlords. Better yet, program them!', 'npm_config_shell': '/bin/bash', 'LC_NAME': 'sv_SE.UTF-8', 'MAIL': '/var/mail/pi', 'SSH_CONNECTION': '192.168.0.104 58887 192.168.0.106 22', 'npm_config_ignore': '', 'npm_package_author_email': 'voodootikigod@gmail.com', 'LC_NUMERIC': 'sv_SE.UTF-8', 'npm_config_ca': '"-----BEGIN CERTIFICATE-----\\nMIIChzCCAfACCQDauvz/KHp8ejANBgkqhkiG9w0BAQUFADCBhzELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAkNBMRAwDgYDVQQHEwdPYWtsYW5kMQwwCgYDVQQKEwNucG0x\\nIjAgBgNVBAsTGW5wbSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxDjAMBgNVBAMTBW5w\\nbUNBMRcwFQYJKoZIhvcNAQkBFghpQGl6cy5tZTAeFw0xMTA5MDUwMTQ3MTdaFw0y\\nMTA5MDIwMTQ3MTdaMIGHMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEDAOBgNV\\nBAcTB09ha2xhbmQxDDAKBgNVBAoTA25wbTEiMCAGA1UECxMZbnBtIENlcnRpZmlj\\nYXRlIEF1dGhvcml0eTEOMAwGA1UEAxMFbnBtQ0ExFzAVBgkqhkiG9w0BCQEWCGlA\\naXpzLm1lMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDLI4tIqPpRW+ACw9GE\\nOgBlJZwK5f8nnKCLK629Pv5yJpQKs3DENExAyOgDcyaF0HD0zk8zTp+ZsLaNdKOz\\nGn2U181KGprGKAXP6DU6ByOJDWmTlY6+Ad1laYT0m64fERSpHw/hjD3D+iX4aMOl\\ny0HdbT5m1ZGh6SJz3ZqxavhHLQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAC4ySDbC\\nl7W1WpLmtLGEQ/yuMLUf6Jy/vr+CRp4h+UzL+IQpCv8FfxsYE7dhf/bmWTEupBkv\\nyNL18lipt2jSvR3v6oAHAReotvdjqhxddpe5Holns6EQd1/xEZ7sB1YhQKJtvUrl\\nZNufy1Jf1r0ldEGeA+0ISck7s+xSh9rQD2Op\\n-----END CERTIFICATE-----\\n"', 'npm_config_globalconfig': '/usr/local/etc/npmrc', 'npm_package_name': 'serialport', 'npm_config_userconfig': '/home/pi/.npmrc', 'npm_package_scripts_install': 'cd serialport_native;node-waf configure build;cp build/Release/serialport_native.node ../', 'npm_package_contributors_2_email': 'nathan@tootallnate.net', 'npm_config_parseable': '', 'npm_package_contributors_1_email': 'esa-matti@suuronen.org', 'npm_config_init_author_email': '', 'SSH_CLIENT': '192.168.0.104 58887 22', 'npm_config_userignorefile': '/home/pi/.npmignore', 'LOGNAME': 'pi', 'USER': 'pi', 'PATH': '/usr/local/bin:/usr/local/lib/node_modules/npm/bin/node-gyp-bin:/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/serialport/node_modules/.bin:/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/.bin:/home/pi/code/node.js/nxt/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games', 'npm_package_author_name': 'Chris Williams', 'npm_config_coverage': '', 'TERM': 'xterm', 'npm_config_versions': '', 'XDG_SESSION_COOKIE': 'a3be5d98a3468313bf90a5c450031884-1346930436.512979-858616058', 'npm_config_onload_script': '', 'SHLVL': '1', 'npm_config_description': 'true', 'npm_config_cache_lock_stale': '60000', 'npm_config_sign_git_tag': '', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_unsafe_perm': 'true', 'npm_config_cache': '/home/pi/.npm', 'npm_config_fetch_retry_mintimeout': '10000', 'npm_config_viewer': 'man', 'npm_config_proxy': '', 'npm_config_fetch_retries': '2', 'npm_config_cache_max': 'null', 'npm_config_depth': 'null', 'npm_package_contributors_0_email': 'chris@iterativedesigns.com', 'npm_config_umask': '18', 'npm_config_proprietary_attribs': 'true', 'npm_config_force': '', 'npm_config_long': '', 'npm_package_contributors_0_name': 'Chris Williams', 'npm_config_editor': 'vi', 'npm_package_version': '0.6.3', 'npm_config_https_proxy': '', '_': '/usr/local/bin/npm', 'npm_package_repository_type': 'git', 'npm_package_contributors_1_name': 'Esa-Matti Suuronen', 'npm_config_npat': '', 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:', 'npm_package_readme': '"<pre>\\n  eeeee eeeee eeeee eeee       e  eeeee \\n  8   8 8  88 8   8 8          8  8   \\" \\n  8e  8 8   8 8e  8 8eee       8e 8eeee \\n  88  8 8   8 88  8 88      e  88    88 \\n  88  8 8eee8 88ee8 88ee 88 8ee88 8ee88\\n\\n  eeeee eeee eeeee  e  eeeee e     eeeee eeeee eeeee eeeee \\n  8   \\" 8    8   8  8  8   8 8     8   8 8  88 8   8   8   \\n  8eeee 8eee 8eee8e 8e 8eee8 8e    8eee8 8   8 8eee8e  8e  \\n     88 88   88   8 88 88  8 88    88    8   8 88   8  88  \\n  8ee88 88ee 88   8 88 88  8 88eee 88    8eee8 88   8  88\\n</pre>\\n\\nVersion: 0.3.0 - Released July 28, 2011\\n\\n*****\\n\\nImagine a world where you can write JavaScript to control blenders, lights, security systems, or even robots. Yes, I said robots. That world is here and now with node-serialport. It provides a very simple interface to the low level serial port code necessary to program [Arduino](http://www.arduino.cc/) chipsets, [X10](http://www.smarthome.com/manuals/protocol.txt) wireless communications, or even the rising [Z-Wave](http://www.z-wave.com/modules/ZwaveStart/) and [Zigbee](http://www.zigbee.org/) standards. The physical world is your oyster with this goodie, don\'t believe us - watch [this presentation from JSConf EU 2010](http://jsconf.eu/2010/speaker/livingroombindmotion_function.html) by [Nikolai Onken](http://twitter.com/nonken) and [J\xc3\xb6rn Zaefferer](http://bassistance.de/).\\n\\n*****\\n\\nHow To Use\\n==========\\n\\nUsing node-serialport is pretty easy because it is pretty basic. It provides you with the building block to make great things, it is not a complete solution - just a cog in the (world domination) machine.\\n\\nTo Install\\n----------\\n\\n<pre>\\n  npm install serialport\\n</pre>\\n\\nTo Use\\n------\\n\\nOpening a serial port:\\n\\n<pre>\\n  var SerialPort = require(\\"serialport\\").SerialPort\\n  var serialPort = new SerialPort(\\"/dev/tty-usbserial1\\");\\n</pre>\\n  \\nWhen opening a serial port, you can specify (in this order).\\n\\n1. Path to Serial Port - required.\\n1. Options - optional and described below.\\n\\nThe options object allows you to pass named options to the serial port during initialization. The valid attributes for the options object are the following\\n\\n* baudrate: Baud Rate, defaults to 9600. Must be one of: 115200, 57600, 38400, 19200, 9600, 4800, 2400, 1800, 1200, 600, 300, 200, 150, 134, 110, 75, or 50.\\n* databits: Data Bits, defaults to 8. Must be one of: 8, 7, 6, or 5.\\n* stopbits: Stop Bits, defaults to 1. Must be one of: 1 or 2.\\n* parity: Parity, defaults to 0. Must be one of: 0, 1, or 2.\\n* buffersize: Size of read buffer, defaults to 255. Must be an integer value.\\n* parser: The parser engine to use with read data, defaults to rawPacket strategy which just emits the raw buffer as a \\"data\\" event. Can be any function that accepts EventEmitter as first parameter and the raw buffer as the second parameter.\\n\\nParsers\\n-------\\n\\nOut of the box, node-serialport provides two parsers one that simply emits the raw buffer as a data event and the other which provides familiar \\"readline\\" style parsing. To use the readline parser, you must provide a delimiter as such:\\n\\n<pre>\\n  var serialport = require(\\"serialport\\");\\n  var SerialPort = serialport.SerialPort; // localize object constructor\\n  \\n  var sp = new SerialPort(\\"/dev/tty-usbserial1\\", { \\n    parser: serialport.parsers.readline(\\"\\\\n\\") \\n  });\\n</pre>\\n\\nTo use the raw parser, you just provide the function definition (or leave undefined):\\n\\n<pre>\\n  var serialport = require(\\"serialport\\");\\n  var SerialPort = serialport.SerialPort; // localize object constructor\\n  \\n  var sp = new SerialPort(\\"/dev/tty-usbserial1\\", { \\n    parser: serialport.parsers.raw\\n  });\\n</pre>\\n\\n\\nYou can get updates of new data from the Serial Port as follows:\\n\\n<pre>\\n  serialPort.on(\\"data\\", function (data) {\\n    sys.puts(\\"here: \\"+data);\\n  });\\n</pre>\\n\\nYou can write to the serial port by sending a string or buffer to the write method as follows:\\n\\n<pre>\\nserialPort.write(\\"OMG IT WORKS\\\\r\\");\\n</pre>\\n\\nEnjoy and do cool things with this code.\\n\\n"', 'npm_config_init_module': '/home/pi/.npm-init.js', 'npm_package_contributors_3_email': 'waldron.rick@gmail.com', 'OLDPWD': '/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/serialport', 'npm_config_version': '', 'npm_config_json': '', 'npm_config_searchsort': 'name', 'npm_config_user': '', 'npm_lifecycle_script': 'cd serialport_native;node-waf configure build;cp build/Release/serialport_native.node ../', 'LC_MEASUREMENT': 'sv_SE.UTF-8', 'PWD': '/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/serialport/serialport_native', 'npm_package_contributors_4_email': 'w1nk', 'npm_config_cache_min': '', 'LC_TIME': 'sv_SE.UTF-8'}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 1, 'srcdir': '', 'check_cxx_compiler': 'g++ icpc sunc++'}
srcdir = '/home/pi/code/node.js/nxt/node_modules/mindstorms_bluetooth/node_modules/serialport/serialport_native'
